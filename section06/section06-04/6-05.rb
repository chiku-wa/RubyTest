# encoding: utf-8
# ================================
# 6.5 正規表現オブジェクトについてもっと詳しく
# ================================
def section_06_05_01
  # ===
  # === 6.5.1 正規表現オブジェクト
  # 正規表現は「//」で囲む以外の方法もある。
  # ---1.Regexp.newでオブジェクトを生成
  p Regexp.new('\d{3}-\d{4}') #=> /\d{3}-\d{4}/

  # ---2.%rで囲む方法
  # 区切り文字「!」の場合
  p %r!\d{3}-\d{4}! #=> /\d{3}-\d{4}/
  # 区切り文字「{}」の場合
  p %r{\d{3}-\d{4}} #=> /\d{3}-\d{4}/
  # %rで囲むと、「/」をエスケープする必要がなくなる
  p %r!http://example\.com! #=> /http:\/\/example\.com/

  # 「/」と「%r」で囲む方法では式展開が可能
  separator = "-"
  p /\d{3}#{separator}\d{4}/ #=> /\d{3}-\d{4}/
  p %r@\d{3}#{separator}\d{4}@ #=> /\d{3}-\d{4}/
end

section_06_05_01

# ===
# === 6.5.2 case文で正規表現を使う
def section_06_05_02
  # 正規表現をcase文のwhen句で使うことも可能
  text = "123-4567"

  case text
  when /\d{2}-\d{4}-\d{4}/
    puts "電話番号です"
  when %r!d{4}/\d{2}/\d{2}!
    puts "日付です"
  when /\d{3}-\d{4}/
    puts "郵便番号です"
  end
end

section_06_05_02

# ===
# === 6.5.3 正規表現オブジェクト作成時のオプション
def section_06_05_03
  # 正規表現オブジェクトの後ろにオプションを付けることもできる
  # 書式
  # /正規表現/オプション

  p "HELLO" =~ /hello/ #=> nil

  # iオプション→大文字小文字区別なし
  p "HELLO" =~ /hello/i #=> 0
  # %rでも可能
  p "HELLO" =~ %r@hello@i #=> 0
end

section_06_05_03
